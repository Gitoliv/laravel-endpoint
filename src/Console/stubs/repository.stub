<?php

namespace DummyNamespace;

use DummyFullModelClass;

class DummyModelClassRepository
{
    /**
     * Returns a paginator instance.
     *
     * @param  int $max Max items to return by page.
     *
     * @return [type]      [description]
     */
    public function paginate($max)
    {
        return DummyModelClass::paginate($max);
    }

    /**
     * Returns a DummyModelVariable by id.
     *
     * @param  int|string $id The id of the DummyModelVariable.
     *
     * @return DummyModelClass|null
     */
    public function find($id)
    {
        return DummyModelClass::where('id', $id)->first();
    }

    /**
     * Create a new DummyModelVariable.
     *
     * @param  array  $data The data needed for creation.
     *
     * @return DummyFullModelClass       The created DummyModelVariable.
     */
    public function create(array $data)
    {
        $DummyModelVariable = DummyModelClass::create($data);

        return $DummyModelVariable;
    }

    /**
     * Update a DummyModelVariable.
     *
     * @param  DummyFullModelClass $DummyModelVariable The DummyModelVariable to update.
     * @param  array  $data          The data to update.
     *
     * @return DummyFullModelClass                The updated DummyModelVariable.
     */
    public function update($DummyModelVariable, array $data)
    {
        $DummyModelVariable->fill($data);
        $DummyModelVariable->save();

        return $DummyModelVariable;
    }

    /**
     * Delete a model instance.
     *
     * @param  DummyFullModelClass $DummyModelVariable The model instance to delete.
     *
     * @return void
     */
    public function delete($DummyModelVariable)
    {
        $DummyModelVariable->delete();
    }

    /**
     * Returns an eloquent filtered query builder.
     *
     * @param  string|null $filters The filter query string.
     * @param  string $satisfy
     * @return Builder
     */
    public function withFilters($filters, $satisfy = 'all', $sort = null)
    {
        return DummyModelClass::filter($filters, $satisfy, $sort);
    }
}
