<?php

namespace DummyNamespace;

use App\Dummyy;
use App\Repositories\DummyyRepository;
use App\Transformers\DummyyTransformer;
use SdV\Larapi\Http\Controllers\ApiController;
use Illuminate\Http\Request;

class DummyyController extends ApiController
{
    /**
     * The DummyyRepository instance.
     *
     * @var DummyyRepository
     */
    protected $dummyInstances;

    /**
     * Create a new DummyyController instance.
     *
     * @param  DummyyRepository  $dummyInstances
     * @return void
     */
    public function __construct(DummyyRepository $dummyInstances)
    {
        $this->dummyInstances = $dummyInstances;
    }

    /**
     * Display a paginated listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        $paginator = $this->dummyInstances->paginate(15);

        return $this->respondPaginate($paginator, new DummyyTransformer());
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        $dummyInstance = $this->dummyInstances->create($request->all());

        return $this->respondCreated($dummyInstance, new DummyyTransformer());
    }

    /**
     * Display the specified resource.
     *
     * @param  \App\Dummyy  $dummyInstance
     * @return \Illuminate\Http\Response
     */
    public function show(Dummyy $dummyInstance)
    {
        return $this->respond($dummyInstance, new DummyyTransformer());
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \App\Dummyy  $dummyInstance
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, Dummyy $dummyInstance)
    {
        $dummyInstance = $this->dummyInstances->update($dummyInstance, $request->all());

        return $this->respond($dummyInstance, new DummyyTransformer());
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \App\Dummyy  $dummyInstance
     * @return \Illuminate\Http\Response
     */
    public function destroy(Dummyy $dummyInstance)
    {
        $this->dummyInstances->delete($dummyInstance);

        return $this->respondNoContent();
    }
}
