<?php

namespace DummyNamespace;

use DummyRootNamespace\DummyModelClassModule;
use DummyRootNamespace\Repositories\DummyModelClassRepository;
use DummyRootNamespace\Transformers\DummyModelClassTransformer;
use SdV\Endpoint\Http\Controllers\ApiController;
use Illuminate\Http\Request;

class DummyModelClassController extends ApiController
{
    /**
     * The DummyModelClassRepository instance.
     *
     * @var DummyModelClassRepository
     */
    protected $DummyModelVariables;

    /**
     * Create a new DummyModelClassController instance.
     *
     * @param  DummyModelClassRepository  $DummyModelVariables
     * @return void
     */
    public function __construct(DummyModelClassRepository $DummyModelVariables)
    {
        $this->DummyModelVariables = $DummyModelVariables;
    }

    /**
     * Display a paginated listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        if (request('limit') == 'all') {
            $DummyModelVariables = $this->DummyModelVariables->all();

            return $this->respond($DummyModelVariables, new DummyModelClassTransformer());
        } else {
            $perPage = request('per_page', 15);

            $paginator = $this->DummyModelVariables->filtered(request('filter'), request('satisfy'), request('sort'))->paginate($perPage);

            return $this->respondPaginate($paginator, new DummyModelClassTransformer());
        }
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request)
    {
        $DummyModelVariable = $this->DummyModelVariables->create($request->all());

        return $this->respondCreated($DummyModelVariable, new DummyModelClassTransformer());
    }

    /**
     * Display the specified resource.
     *
     * @param  DummyRootNamespace\DummyModelClassModule  $DummyModelVariable
     * @return \Illuminate\Http\Response
     */
    public function show(DummyModelClass $DummyModelVariable)
    {
        return $this->respond($DummyModelVariable, new DummyModelClassTransformer());
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  DummyRootNamespace\DummyModelClassModule  $DummyModelVariable
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, DummyModelClass $DummyModelVariable)
    {
        $DummyModelVariable = $this->DummyModelVariables->update($DummyModelVariable, $request->all());

        return $this->respond($DummyModelVariable, new DummyModelClassTransformer());
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  DummyRootNamespace\DummyModelClassModule  $DummyModelVariable
     * @return \Illuminate\Http\Response
     */
    public function destroy(DummyModelClass $DummyModelVariable)
    {
        $this->DummyModelVariables->delete($DummyModelVariable);

        return $this->respondNoContent();
    }
}
